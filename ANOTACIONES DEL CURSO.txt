Instalar mongoDB:
-Bison: Representación en forma binaria de JSON
-Crear carpeta dentro del diso C: llamada data
-Dentro de data otra llamada db
-En windows 10 debemos de quitar la opción de instalar mongoDB compas para que se instale bien

Para usar mongoDB debemos de ejecutar:
C:\Program Files\MongoDB\Server\3.6\bin (Aquí adentro estan los dos ejecutables)
-mongod.exe para los procesos de demonio o background
-mongo.exe para entrar dentro del servidor de mongo

NO ESTARÍA MAL TOMAR EL CURSO DE MONGO UNIVERSITY

+ db.bookmarks.save((id:1, title:'Curso de angular'));
+

******************************(Instalar Robot 3T interfaz gráfica de mongoDB)******************
+ Buscar en google roboMongo

******************************(Crear el proyecto de node.js)***********************************
+ npm init (Seguir las instrucciones del wizard en la línea de comandos)
+ cat package.json

******************************(Instalar librerías y paquetes)**********************************
+ Express: Framework que funciona sobre node.js que nos permite trabajar con rutas, peticiones http y demás....
+ Dentro de la carpeta de api/ -> npm install express --save
+ Librería para encriptar contraseñas y demás: npm install bcrypt-nodejs --save
+ Permite convertir los JSON a objetos de javascript: npm install body-parser --save
+ Librería para subida de ficheros: npm install connect-multiparty --save
+ Librería para JWT: npm install jwt-simple --save
+ Librería para Mongoose(ORM para mongoDB): npm install mongoose --save
+ Librería moment: npm install moment --save
+ Librería para node.js(Watcher para compilar los cambios en tiempo real): npm install nodemon --save-dev

*******************************(La parte del BACKEND)*******************************************
+ La parte del backend va a estar basada en el archivo de index.js

+ Ejecutar el fichero de index.js: Dentro de la carpeta api/ node index.js
+ Utilizar nodemon: Abrir el packege.json->
 "scripts": {
    "start":"nodemon index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
+npm start

*********************************(Crear el Servidor Web)*****************************************
+ Crear un fichero dentro de api/app.js

***********************************(Arquitectura MVC)********************************************
+ Es un patrón de diseño que se encarga de separar la lógica de negocio de la interfaz de usuario y es uno de las
arquitecturas en desarrollo de aplicaciones más comunes que facilita la funcionalidad, la mantenibilidad, escalabilidad. También nos mejora la forma de programar

+ El controlador es el intermediario entre la vista y el controlador

+ Cuando nos llegan datos por la URL utilizamos params
+ Cuando nos llegan datos por POST o por PUT utilizamos body

*********************************(Instalar Mongoose Pagination)*********************************
+Dentro de api/ npm install mongoose-pagination --save


***************************************
+ El index.js es para hacer las conexiones con la base de datos 
+ El app.s es para llevar carga de ficheros, configuraciones, etc.

+ Averiguar sobre el método de populate en mongoDB

**************************************(Async y Await)************************************
+ Las funciones síncronas hay que esperar a que finalicen

+ var following = await Follow.findOne({"user":identity_user_id, "followed":user_id}).exec((err, follow)=>{
		//El handleError es un método de node.js para devolver error por consola
		if(err) return handleError(err);
		return follow;
	});


****************************************(ANGULAR)*********************************************
+ Instalar librerías externas dentro de angular --> npm update para actualizar las dependencias del
package.json
+angular-cli.json = angular.json
+ Dentro de angular.json ->
	"styles": [ 
              "src/assets/styles.css",
              "node_modules/bootstrap/dist/css/bootstrap.min.css"
            ],
            "scripts": [
              "node_modules/jquery/dist/jquery.min.js",
              "node_modules/bootstrap/dist/js/bootstrap.min.js"
            ]
+ 

+ Que es un servicio en angular: Una clase con un conjunto de métodos que van a interactuar con un 
 servicio REST. (Hacer peticiones ajax a una API)

 ******************************(Error con el Observable)**************************************
 + npm install --save rxjs-compat
 + npm install @types/jquery --save
 + se in your component: import * as $ from 'jquery';// import Jquery here
 + npm install --save angular2-moment
 + Cargar el módulo de moments en app.module.ts 
      ---> import { MomentModule } from 'angular2-moment';
      y lo ponemos en la parte de imports

 + Ejemplo del uso de un pipe
      {{ (publication.created_at | amFromUnix)| amLocale:'es' | amTimeAgo }}
 
 + QUEDA PENDIENTE ARREGLAR LO DE EL COUNTERS EN EL CONTROLADOR DE LA API PARA EL ID POR LA URL